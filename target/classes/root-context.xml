<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- <context:component-scan ba
	se-package="test.spring.second/**/service"> 
		</context:component-scan> <context:component-scan base-package="test.spring.second/**/dao"> 
		</context:component-scan> -->

	<!-- DataSource 등록 : 데이터베이스 연결 정보 등록 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver">
		</property>
		<property name="url" value="jdbc:oracle:thin:@restart.cxyazksn7at2.us-east-1.rds.amazonaws.com:1521:ORCL"></property>
		<property name="username" value="lgodl3512"></property>
		<property name="password" value="123456789"></property>
	</bean>

	<!-- Spring과 Mybatis 연결 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml">
		</property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- dao가 사용할 인터페이스 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">

		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- dao에서 필요한 시점에서 commit/rollback 이 구동되게 설정 : aop 사용해서 설정함 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* test.spring.ohffice..*ServiceImpl.*(..))"
			id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice" id="transactionAdvisor"
			pointcut-ref="serviceMethod" />
	</aop:config>

</beans>
